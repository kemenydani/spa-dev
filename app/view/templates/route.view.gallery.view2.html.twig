{% extends 'block.full.html.twig' %}

{% block content %}

<div class="container-full " id="route-view-gallery-view">
    <div class="container-full route-header gallery-view-route-header" style="display: none">
        <div class="body">
            <div class="container gallery-header-container"><h2 class="title">{{ gallery.getName() }}</h2></div>
        </div>
       <div class="bg-image" style="background-image: url({{ gallery.requestHeaderImage() }})"></div>
    </div>
    {% verbatim %}
    <div class="container image-list-container" id="image-list">
        <div id="gallery-mosaic" class="photos" ref="photoContainer">

        </div>
    </div>
    {% endverbatim %}
</div>

<script>

(function(Vue){

    new Vue({
        el: "#image-list",
        data: {
	        galleryId : 1,
            total: 0,
        	queryParams : { startAt : 0, },
            images : {
	        	urls   : [],
	        	loaded : [],
            },
        },
        watch : {
        	'images.loaded' : {
        		handler: function( cv, ov )
                {
                	var photoDIV = document.createElement('div');
                	photoDIV.appendChild(cv[cv.length-1]);
                	photoDIV.className = 'photo';
                	this.$refs['photoContainer'].appendChild(photoDIV);
                }
            }
        },
        methods: {
            getData : function()
            {
                return new Promise(function(resolve, reject)
                {
                    fetch('/gallery/loadInfinityImages/?galleryId=' + this.galleryId + '&startAt=' + this.queryParams.startAt)
                        .then(function(response)
                        {
                        	if(!response.ok) throw new Error('Bad request: Unable to load images.');
                        	resolve(response.json());
                        })
                        .catch(function(error) { reject(error) });
                }
                .bind(this));
            },
	        loadImages : function()
            {
	            this.images.urls.forEach(function( url, index )
                {
                	var image = new Image();
	                image.onload = function() { this.images.loaded.push(image); }.bind(this);
	                image.src = url;
                }
                .bind(this));
            },

        },
        created : function()
        {
	        this.getData()
                .then(function( data )
                {
                    this.total  = data.total;
                    data.models.forEach(function(url) { this.images.urls.push(url) }.bind(this));
	                this.loadImages();
                }
                .bind(this))
        },
        mounted: function ()
        {
        
        }
    });

}(Vue))

</script>

{% endblock %}
