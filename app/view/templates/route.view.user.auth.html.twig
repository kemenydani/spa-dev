{% extends 'block.full.html.twig' %}

{% block content %}

    <script src='https://www.google.com/recaptcha/api.js'></script>

    <div class="container">
        {% verbatim %}
        <div id="auth-area">
            <div class="form-holder">
                <div class="form-wrapper-overlay" v-show="loading">
                    <i class="loading-spinner fas fa-circle-notch fa-spin"></i>
                    <span>{{ message }}</span>
                </div>
                <div class="form-wrapper" v-bind:class="{ loading : loading }">
                    <form-login class="auth-section-tab" v-show="tab === 1"></form-login>
                    <form-register class="auth-section-tab" v-show="tab === 2"></form-register>
                    <nav class="form-navigation">
                        <button v-bind:class="[ tab === 2 ? 'inactive' : '' ]" v-on:click="switchOrLogin()">LOGIN</button>
                        <button v-bind:class="[ tab === 1 ? 'inactive' : '' ]" v-on:click="switchOrRegister()">REGISTER</button>
                    </nav>
                </div>
            </div>
            <div class="brand">
                <picture>
                    <source type="image/svg+xml" srcset="static/drawable/logo-white-orange.svg">
                    <img src="static/drawable/logo-white-orange.png"  alt="Logo description">
                </picture>
            </div>
        </div>
        {% endverbatim %}
    </div>

    {% verbatim %}
        <script type="text/x-template" id="template-form-login">
            <form id="form-login" class="auth-section-tab">
                <h1 class="title">Login</h1>
                <div class="input-field">
                    <input placeholder="Email" type="text" name="email" v-model="form.email">
                </div>
                <div class="input-field">
                    <input placeholder="Password" type="password" name="password" v-model="form.password">
                </div>
                <div class="input-field input-remember">
                    <label class="checkbox-wrap"> Remember me
                        <input type="checkbox" v-model="form.remember">
                        <span class="checkmark"></span>
                    </label>
                </div>
            </form>
        </script>
        <script type="text/x-template" id="template-form-register">
             <form id="form-register" class="auth-section-tab">
                <h1 class="title">Register</h1>
                <div class="input-field-group">
                    <div class="input-field">
                        <input placeholder="Email" type="text" name="email" v-model="form.email">
                    </div>
                    <div class="input-field">
                        <input placeholder="Username" type="text" name="username" v-model="form.username">
                    </div>
                </div>
                <div class="input-field-group">
                    <div class="input-field">
                        <input placeholder="Password" type="password" name="password" v-model="form.password">
                    </div>
                     <div class="input-field">
                        <input placeholder="Password repeat" type="password" name="password_repeat" v-model="form.password_repeat">
                    </div>
                </div>
            </form>
        </script>
    {% endverbatim %}

    <script>

        (function($, Vue){

            var EventBus = new Vue();

            Vue.component('form-login', {
                template: '#template-form-login',
                data: function () {
                    return {
                        form: {
                            email: 'sno@sno.com',
                            password: 'admin',
                            remember: true
                        }
                    }
                },
                methods: {
                    postLogin : function( cb )
                    {
                        EventBus.$emit('setLoading', true);
                        EventBus.$emit('setMessage', 'Logging In.');

                        setTimeout(function()
                        {
                            $.post( '/postLogin', this.form )
                                .then(function( response )
                                {
                                    EventBus.$emit('setMessage', 'Now redirecting.');
                                    cb(response)
                                }
                                .bind(this))
                                .catch(function(error)
                                {
                                    EventBus.$emit('setMessage', 'Login failed.');
                                    EventBus.$emit('setLoading', false);
                                    cb(false)
                                }
                                .bind(this))
                            ;
                        }
                        .bind(this), 2000);
                    }
                },
                created : function()
                {
                    EventBus.$on('postLogin', function( cb )
                    {
                        this.postLogin( cb );
                    }
                    .bind(this));
                }
            });

            Vue.component('form-register', {
                template: '#template-form-register',
                data: function () {
                    return {
                        form: {
                            email: 'test@test.com',
                            username: 'foo',
                            password: 'foo',
                            password_repeat: 'foo'
                        }
                    }
                },
                methods: {
                    postRegister : function( cb )
                    {
                        EventBus.$emit('setLoading', true);
                        EventBus.$emit('setMessage', 'Processing');

                        setTimeout(function()
                        {
                            $.post( '/postRegister', this.form )
                                .then(function( response )
                                {
                                    cb(response)
                                })
                                .catch(function(error)
                                {
                                    EventBus.$emit('setLoading',false);
                                    cb(false)
                                })
                            ;
                        }
                        .bind(this), 2000);
                    }
                },
                created : function(){
                    EventBus.$on('postRegister', function( cb )
                    {
                        this.postRegister( cb );
                    }
                    .bind(this));
                }
            });

            var app = new Vue({
                el: '#auth-area',
                components: [ 'form-login', 'form-register' ],
                data: function () {
                    return {
                        tab: 1,
                        loading: false,
                        message: ''
                    }
                },
                methods: {
                    switchOrLogin: function()
                    {
                        if(this.tab === 2) return this.tab = 1;

                        EventBus.$emit('postLogin', function( response )
                        {
                            EventBus.$emit('setMessage', 'Logged in, now redirecting to home.');
                            setTimeout(function() { window.location.replace("/home"); }, 2000);
                        }
                        .bind(this));
                    },
                    switchOrRegister: function()
                    {
                        if(this.tab === 1) return this.tab = 2;

                        EventBus.$emit('postRegister', function( response )
                        {
                            EventBus.$emit('setMessage', 'Filling Your login informations.')
                            setTimeout(function()
                            {
                                EventBus.$emit('setLoading', false);
                                EventBus.$emit('switchTab', 1);
                            }, 2000);
                        }
                        .bind(this));
                    }
                },
                created : function()
                {
                    EventBus.$on('setMessage', function( message )
                    {
                        this.message = message;
                    }
                    .bind(this));

                    EventBus.$on('switchTab', function( tab )
                    {
                        this.tab = tab;
                    }
                    .bind(this));

                    EventBus.$on('setLoading', function( state )
                    {
                        this.loading = state;
                    }
                    .bind(this));
                }
            });

        }( jQuery, Vue ));

    </script>

{% endblock %}