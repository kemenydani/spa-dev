{% extends 'block.full.html.twig' %}

{% block content %}

<div class="container-full " id="route-view-gallery-view">
    <div class="container-full route-header gallery-view-route-header">
        <div class="body">
            <div class="container gallery-header-container"><h2 class="title">{{ gallery.getName() }}</h2></div>
        </div>
       <div class="bg-image" style="background-image: url({{ gallery.requestHeaderImage() }})"></div>
    </div>
    <div id="imagePreload" >

    </div>
    
    <div class="container image-list-container" id="image-list">
        <div id="gallery-mosaic">
            <div class="photo" v-for="url in urls"></div>
        </div>
    </div>

</div>

<script>

var _IMAGES_JSON_ = {% autoescape false %}{{ gallery.getImageCollection().getUrlArray()|json_encode }}{% endautoescape %};
var _IMAGES_ = $.map(_IMAGES_JSON_, function(value, index) { return value; });

$(document).ready(function(){

	new Vue({
        data : function () {
            return {
            	images : {
            		loaded : [],
                    source : [],
                }
            }
        },
        methods :
        {
        	processImages : function( images )
            {

            }
        },
        mounted: function(){

        },
        created : function(){
	        _IMAGES_.forEach(function( image, index )
            {
	        	console.log(image)
            });
        }
    })

});


</script>

<!--
<script>

	var __IMAGES__ = {% autoescape false %}{{ gallery.getImageCollection().getUrlArray()|json_encode }}{% endautoescape %};

	$(document).ready(function(){

        var images = $.map(__IMAGES__, function(value, index) {
            return value;
        });

		//initPhotos($('#gallery-mosaic'), images);

    });

	(function($, Vue){

		var DATA = {% autoescape false %}{{ images|json_encode }}{% endautoescape %};
		var LIMIT = {% autoescape false %}{{ limit }}{% endautoescape %};
        var galleryId = "{{ gallery.getId() }}";

		new Vue({
			el: '#image-list',
            data: function () {
                return {
                    models: DATA.models,
                    total: parseInt(DATA.total),
                    limit: parseInt(LIMIT),
                    startAt: parseInt(LIMIT),
                    loading: false,
                }
            },
            methods:
            {
                bottomVisible : function()
                {
                    var spaceBelow = $(window).height() - $('#gallery-mosaic')[0].getBoundingClientRect().bottom;
                    return spaceBelow > -100;
                },
                loadArticles: function()
                {
                    return $.getJSON("/gallery/loadInfinityImages/", { galleryId:galleryId, startAt: this.startAt })
                        .then(function(response){
                            this.total = parseInt(response.total);
                            console.log(response);
                            return response.models;
                        }
                        .bind(this));
                },
                loadMore : function()
                {
                    return this.loadArticles().then(function(images)
                    {
                        $.each(images, function(i,image){ this.models.push(image); }.bind(this));

	                    initPhotos($('#gallery-mosaic'), images);

                        this.startAt += this.limit;
                    }
                    .bind(this))
                },
                search : function()
                {
                    this.startAt = 0;
                    this.total = 0;
                    this.loadArticles().then(function(products)
                    {
                        this.models = products;
                    }
                    .bind(this))
                }
            },
            mounted: function(){
	            initPhotos($('#gallery-mosaic'), this.models);
            },
            created: function()
            {
           
                window.addEventListener('scroll', function()
                {
                    if(this.bottomVisible() === true && this.loading === false)
                    {
                        if(this.total > this.models.length)
                        {
                            this.loading = true;
                            this.loadMore().then(function()
                            {
                                this.loading = false;
                            }
                            .bind(this));
                        }
                    }
                }.bind(this));
            },
			});

		}(jQuery, Vue));

















</script>
-->
{% endblock %}
