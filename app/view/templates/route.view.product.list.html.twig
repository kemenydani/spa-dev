{% extends 'block.full.html.twig' %}

{% block content %}
    <div class="container-full" id="route-view-product-list">
        {% verbatim %}

        <div class="container product-list-container" id="product-list">
            <div class="search-product">
                <div class="info">Loaded {{ models.length }} from total {{ total }} products</div>
                <div class="form">
                    <div class="input-field">
                        <select v-model="searchParams.orderBy" v-on:change="search">
                          <option value="name|asc">Ascending by name</option>
                          <option value="name|desc">Descending by name</option>
                          <option value="price|asc">Ascending by price</option>
                          <option value="price|desc">Descending by price</option>
                          <option value="id|asc">Ascending by id</option>
                          <option value="id|desc">Descending by id</option>
                          <option value="date|asc">Ascending by date</option>
                          <option value="date|desc">Descending by date</option>
                        </select>
                    </div>
                    <div class="input-field">
                        <input
                            v-on:keyup.enter="search()"
                            v-model="searchParams.name"
                            placeholder="Search for product"
                            type="text">
					</div>
					<button class="button button-primary" v-on:click="search()">SEARCH</button>
                </div>
            </div>
            <br>
            <div class="product-flex">
                <article v-for="(product, key) in models" v-bind:key="key" class="product">
                    <div class="image"
                       v-bind:style="{ 'background-image': 'url(' + product.image + ')' }">
                      <div class="foot">
                          <div class="price">{{ product.price }} {{ product.currency }}</div>
                          <a v-bind:href="'product/' + product.id " class="details">Details</a>
                      </div>
                    </div>
                </article>
            </div>
            <div v-if="loading" class="loading-products">
              <i v-if="loading" class="fas fa-4x fa-circle-notch fa-spin"></i>
			</div>
        </div>
        {% endverbatim %}
    </div>

    <script type="text/javascript">

        (function($, Vue){

            var DATA = {% autoescape false %}{{ products }}{% endautoescape %};
            var LIMIT = {% autoescape false %}{{ limit }}{% endautoescape %};

            new Vue({
                el: '#product-list',
                data: function () {
                    return {
                        models: DATA.models,
                        total: parseInt(DATA.total),
                        limit: parseInt(LIMIT),
                        startAt: parseInt(LIMIT),
                        loading: false,
                        searchParams : {
                            name: null,
                            orderBy : 'name|asc'
                        }
                    }
                },
                methods: {
                    toggleproductInfo : function( event )
                    {
                        $(event.currentTarget).parent().find('.block-info').slideToggle("fast");
                    },
                    bottomVisible : function()
                    {
                        var spaceBelow = $(window).height() - $('#product-list')[0].getBoundingClientRect().bottom;
                        return spaceBelow > -100;
                    },
                    loadArticles: function()
                    {
                        return $.getJSON("/product/loadInfinity/", {
                        	search: this.searchParams.name,
                            order: this.searchParams.orderBy,
                            startAt: this.startAt
                        }).then(function(response){
                                this.total = parseInt(response.total);
                                return response.models;
                        }.bind(this));
                    },
                    loadMore : function()
                    {
                        return this.loadArticles().then(function(products)
                        {
	                        this.startAt += this.limit;
                            $.each(products, function(i,product){ this.models.push(product); }.bind(this));
                        }
                        .bind(this))
                    },
                    search : function()
                    {

                        this.startAt = 0;
                        //this.total = 0;
                        this.loadArticles().then(function(products)
                        {
                            this.models = products;
                            this.startAt = this.limit;
                        }
                        .bind(this))
                    }
                },
                created: function()
                {
                    window.addEventListener('scroll', function()
                    {
                        if(this.bottomVisible() === true && this.loading === false)
                        {
                            if(this.total > this.models.length)
                            {
                                this.loading = true;
                                this.loadMore().then(function()
                                {
                                    this.loading = false;
                                }
                                .bind(this));
                            }
                        }
                    }.bind(this));
                },
            });

        }(jQuery, Vue));

    </script>
{% endblock %}
